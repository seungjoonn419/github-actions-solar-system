name: Solar System Workflow

on: 
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'

env:
  MONGO_URI: mongodb+srv://supercluster.d83jj.mongodb.net/superData
  MONGO_USERNAME: superuser
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}

jobs:
  unit-testing:
    name: Unit Testing
    runs-on: ubuntu-latest
    container:
      image: node:20
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Setup Node.js Version step is commented out because Node.js is already available in the container
      # - name: Setup NodeJS Version
      #   uses: actions/setup-node@v3
      #   with:
      #     node-version: 20

      - name: Cache NPM dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: '${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}'

      - name: Install Dependencies
        run: npm install

      - name: Unit Testing
        run: npm test
      
      - name: Archive Test Result
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: Mocha-Test-Result
          path: test-results.xml


  code-coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    needs: unit-testing
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup NodeJS Version
        uses: actions/setup-node@v3
        with:
          node-version: 18
    
      - name: Install Dependencies
        run: npm install
    
      - name: Run Code Coverage
        run: npm run coverage
        continue-on-error: true  # 이 단계가 실패하더라도 계속 진행합니다.
      
      - name: Upload Code Coverage Reports
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: Code-Coverage-Result
          path: coverage
          retention-days: 5

  docker:
    name: Docker Build and Push
    permissions:
      contents: write
      packages: write
    runs-on: ubuntu-latest
    needs: 
      - unit-testing
      - code-coverage
    steps:
      - uses: actions/checkout@v4
      - uses: docker/login-action@v2.2.0
        with:
          registry: ghcr.io
          username: '${{ github.repository_owner }}'
          password: '${{ secrets.GITHUB_TOKEN }}'
      - uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: 'ghcr.io/${{ github.repository_owner }}/solar-system:${{ github.sha }}'

  dev-deploy:
    needs: docker
    runs-on: ubuntu-latest
    environment:
      name: development
    steps:
      - uses: actions/checkout@v4
      - uses: azure/setup-kubectl@v3
        with:
          version: v1.26.0
      - uses: azure/k8s-set-context@v3
        with:
          method: kubeconfig
          kubeconfig: '${{ secrets.KUBECONFIG }}'
      - run: kubectl version --short -o yaml

  integration-testing:
    needs: dev-deploy
    runs-on: ubuntu-latest
    uses: ./.github/workflows/reusable-workflow.yml
    with:
      ingress-url: ${{ needs.dev-deploy.outputs.APP_INGRESS_URL }}
